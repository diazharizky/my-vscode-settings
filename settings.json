{
  "redhat.telemetry.enabled": true,
  "workbench.startupEditor": "none",
  "git.confirmSync": false,
  "git.autofetch": true,
  "eslint.validate": ["javascript"],
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "files.exclude": {
    "**/.venv": true,
    "**/.vscode": true,
    "**/node_modules": true
  },
  "workbench.colorTheme": "One Dark Pro",
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    }
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[python]": {
    "editor.formatOnSave": true
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    }
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features",
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    }
  },
  "[yaml]": {
    "editor.defaultFormatter": "redhat.vscode-yaml"
  },
  "editor.suggestSelection": "first",
  "ruby.intellisense": "rubyLocate",
  "ruby.lint": {
    "rubocop": true
  },
  "ruby.rubocop.executePath": "/path/to/shims/directory", // For Linux case /home/diazharizky/.rbenv/shims/
  "[ruby]": {
    "editor.defaultFormatter": "misogi.ruby-rubocop"
  },
  "go.toolsManagement.autoUpdate": true,
  "workbench.iconTheme": "material-icon-theme",
  "solargraph.commandPath": "/path/to/absolute/path/solargraph", // For Linux case /home/diazharizky/.rbenv/shims/solargraph
  "diffEditor.ignoreTrimWhitespace": false,
  "go.coverOnSave": true,
  "go.coverageDecorator": {
    "type": "gutter",
    "coveredHighlightColor": "rgba(64,128,128,0.5)",
    "uncoveredHighlightColor": "rgba(128,64,64,0.25)",
    "coveredGutterStyle": "blockgreen",
    "uncoveredGutterStyle": "blockred"
  },
  "go.coverOnSingleTest": true
}
